<#@ template language="C#" #>
<#@ import namespace="WolframFourierArtCode" #>
<#@ parameter name="funcData" type="FourierFuncData" #>
// This file is autogenerated by WolframFourierArtCode

#include "<#= funcData.ClassName #>.h"

<#  foreach(var series in funcData.Series) { #>
class <#= $"{funcData.ClassName}Series{series.Index:00}" #> : public FourierSeriesBase
{
public:
    <#= $"{funcData.ClassName}Series{series.Index:00}" #>()
    {
        _minT = <#= series.MinT #>;
        _maxT = <#= series.MaxT #>;
    }

    virtual Coordinates* calc(double t) override
    {
        if (!(_minT <= t && t <= _maxT)) return nullptr;

        if (sin(t/2) < 0) return nullptr;

        double x = <#= series.FormulaX #>;

        double y = <#= series.FormulaY #>;

        return new Coordinates(x, y);
    }
};

<#  } #>

void <#= funcData.ClassName #>::initSeries()
{
    if (!_series.empty()) return;

    _series = {
<#  foreach(var series in funcData.Series) { #>
        new <#= $"{funcData.ClassName}Series{series.Index:00}" #>(),
<#  } #>
    };
}
