<#@ template language="C#" #>
<#@ import namespace="WolframFourierArtCode" #>
<#@ parameter name="funcData" type="FourierFuncData" #>
// This file is autogenerated by WolframFourierArtCode
using WolframFourierArtCode.FourierFuncs;

public class <#= funcData.ClassName #>: FourierFuncBase
{
    protected override void InitSeries()
    {
        _series = new IFourierSeries[] 
        {
<#      foreach(var series in funcData.Series) { #>
            new <#= $"{funcData.ClassName}Series{series.Index:00}" #>(),
<#      } #>
        };
    }

    #region Series
    
<#  foreach(var series in funcData.Series) { #>
    private class <#= $"{funcData.ClassName}Series{series.Index:00}" #>: FourierSeriesBase
    {
        public override double MinT => <#= series.MinT #>;

        public override double MaxT => <#= series.MaxT #>;

        public override Coordinates Calc(double t)
        {
            if (!(MinT <= t && t <= MaxT)) return null;

            if (sin(t/2) < 0) return null;

            double x = <#= series.FormulaX #>;

            double y = <#= series.FormulaY #>;

            return new Coordinates(x, y);
        }
    }

<#  } #>

    #endregion Series
}
