<#@ template language="C#" #>
<#@ import namespace="WolframFourierArtCode" #>
<#@ parameter name="funcData" type="FourierFuncData" #>
from math import sin;
from FourierFunc import Coordinates;
from FourierFunc import FourierFuncBase;
from FourierFunc import FourierSeriesBase;

# This file is autogenerated by WolframFourierArtCode

class <#= funcData.ClassName #>(FourierFuncBase):
    def _init_series(self):
        self._series = [
<#      foreach(var series in funcData.Series) { #>
            <#= $"_{funcData.ClassName}Series{series.Index:00}" #>(),
<#      } #>
        ]


<#  foreach(var series in funcData.Series) { #>
class <#= $"_{funcData.ClassName}Series{series.Index:00}" #>(FourierSeriesBase):

    min_t = <#= series.MinT #>
    max_t = <#= series.MaxT #>
    
    def calc(self, t: float) -> Coordinates:
        if not (self.min_t <= t <= self.max_t):
            return None

        if sin(t/2) < 0:
            return None

        x = <#= series.FormulaX #>

        y = <#= series.FormulaY #>

        return Coordinates(x, y)

<#  } #>
